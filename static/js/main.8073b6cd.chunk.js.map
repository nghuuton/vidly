{"version":3,"sources":["components/common/like.jsx","components/common/pagination.jsx","services/fakeMovieService.js","components/movies.jsx","utils/pagination.js","App.js","serviceWorker.js","index.js"],"names":["Like","liked","onClick","ClassLike","classNames","style","cursor","className","aria-hidden","Pagination","props","itemCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","aria-label","map","page","key","movies","_id","title","genre","name","numberInStock","dailyRentalRate","publishDate","getMovies","Movies","state","handlePageChange","setState","movie","filter","m","index","indexOf","count","this","length","allMovies","items","perPage","start","slice","take","value","paginate","Fragment","handleLike","handleDelete","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8073b6cd.chunk.js","sourcesContent":["import classNames from \"classnames\";\r\nimport React from \"react\";\r\n\r\n/**\r\n *\r\n * @param {liked} boolean\r\n * @param {onClick} func\r\n * @return React Dom\r\n */\r\n// class Like extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {};\r\n//   }\r\n//   listenEvent() {\r\n//     return () => {\r\n//       this.props.onClick();\r\n//     };\r\n//   }\r\n//   render() {\r\n//     const { liked, onClick } = this.props;\r\n//     let ClassLike = classNames(\r\n//       { \"fa fa-heart-o\": !liked },\r\n//       { \"fa fa-heart\": liked }\r\n//     );\r\n//     return (\r\n//       <i\r\n//         style={{ cursor: \"pointer\" }}\r\n//         className={ClassLike}\r\n//         aria-hidden=\"true\"\r\n//         onClick={this.listenEvent()}\r\n//       ></i>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Like;\r\n\r\nconst Like = ({ liked, onClick }) => {\r\n  let ClassLike = classNames(\r\n    { \"fa fa-heart-o\": !liked },\r\n    { \"fa fa-heart\": liked }\r\n  );\r\n  return (\r\n    <i\r\n      style={{ cursor: \"pointer\" }}\r\n      className={ClassLike}\r\n      aria-hidden=\"true\"\r\n      onClick={() => onClick()}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nconst Pagination = (props) => {\r\n  /**\r\n   * @param itemCount: Tổng số item\r\n   * @param pageSize: Số item trên 1 trang\r\n   * @param pageCount: số trang được làm tròn. Phải làm tròn nếu không 9/10 = 0.9\r\n   * @param pages: sử dụng lodash để lấy mảng số trang bắt đầu từ 1\r\n   */\r\n\r\n  const { itemCount, pageSize, onPageChange, currentPage } = props;\r\n  const pageCount = Math.ceil(itemCount / pageSize);\r\n  const pages = _.range(1, pageCount + 1);\r\n\r\n  /**\r\n   * @param pageCount\r\n   * Nếu pageCount === 1 Nếu trong danh sach <= số item trên 1 trang\r\n   * thì không hiển thị số trang\r\n   * @return null\r\n   */\r\n\r\n  if (pageCount === 1) return null;\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n            key={page}\r\n          >\r\n            <div onClick={() => onPageChange(page)} className=\"page-link\">\r\n              {page}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find((m) => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find((g) => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find((m) => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { paginate } from \"../utils/pagination\";\r\nclass Movies extends Component {\r\n  state = { movies: getMovies(), currentPage: 1, pageSize: 4 };\r\n  handleDelete(movie) {\r\n    return () => {\r\n      const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n      this.setState({ movies });\r\n    };\r\n  }\r\n  handleLike(movie) {\r\n    return () => {\r\n      const movies = [...this.state.movies];\r\n      const index = movies.indexOf(movie);\r\n      movies[index].liked = !movies[index].liked;\r\n      this.setState({ movies });\r\n    };\r\n  }\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { movies: allMovies, pageSize, currentPage } = this.state;\r\n    if (count === 0) return <p>No movies in the database.</p>;\r\n    const movies = paginate(allMovies, currentPage, pageSize);\r\n    return (\r\n      <React.Fragment>\r\n        <p>Showing {count} movies in the database.</p>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Genre</th>\r\n              <th>Stock</th>\r\n              <th>Rate</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {movies.map((movie) => (\r\n              <tr key={movie._id}>\r\n                <td>{movie.title}</td>\r\n                <td>{movie.genre.name}</td>\r\n                <td>{movie.numberInStock}</td>\r\n                <td>{movie.dailyRentalRate}</td>\r\n                <td>\r\n                  <Like liked={movie.liked} onClick={this.handleLike(movie)} />\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    onClick={this.handleDelete(movie)}\r\n                    className=\"btn btn-danger btn-sm\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          itemCount={count}\r\n          pageSize={pageSize}\r\n          onPageChange={this.handlePageChange}\r\n          currentPage={currentPage}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\n/**\r\n *\r\n * @param {*} items: mảng cần cắt\r\n * @param {*} page: số trang hiện tại\r\n * @param {*} perPage: số item trên 1 trang\r\n * @param start = (page - 1) * perPage\r\n * @return Array đã đước cắt từ @param start.\r\n * Lấy số phần tử từ mảng đó take(perPage).value()\r\n */\r\n\r\nexport function paginate(items, page, perPage) {\r\n  const start = (page - 1) * perPage;\r\n  return _(items).slice(start).take(perPage).value();\r\n}\r\n","import React from \"react\";\nimport Movies from \"./components/movies\";\nimport \"./App.css\";\nfunction App() {\n  return (\n    <main className=\"container\">\n      <Movies />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}